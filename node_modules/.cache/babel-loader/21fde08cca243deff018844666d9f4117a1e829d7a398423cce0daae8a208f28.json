{"ast":null,"code":"import axios from \"axios\";\n\n// Create an Axios instance\nconst api = axios.create({\n  baseURL: \"http://localhost:8080\",\n  // Replace with your backend base URL\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add a request interceptor to attach the token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  // Get the token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Attach token as Bearer\n  }\n  return config;\n}, error => {\n  // Handle request errors\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["C:/Users/Aditya Shinde/ERP_Frontend/academic/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an Axios instance\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:8080\", // Replace with your backend base URL\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Add a request interceptor to attach the token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    // Get the token from localStorage\r\n    if (token) {\r\n      \r\n      config.headers.Authorization = `Bearer ${token}`; // Attach token as Bearer\r\n    }\r\n    \r\n    return config;\r\n  },\r\n  (error) => {\r\n    // Handle request errors\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C;EACA,IAAIF,KAAK,EAAE;IAETD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE,CAAC,CAAC;EACpD;EAEA,OAAOD,MAAM;AACf,CAAC,EACAK,KAAK,IAAK;EACT;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}